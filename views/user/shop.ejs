

<%- include('../layouts/header')%>

<%- include('../partials/user-header')%>


<section>
  <h1
    class="text-center"
    style="text-shadow: 2px 2px 5px rgb(101, 226, 101); color: rgb(225, 65, 65)"
  >
    SHOP
  </h1>
  <button
    class="btn btn-outline-primary"
    type="button"
    data-bs-toggle="offcanvas"
    data-bs-target="#staticBackdrop"
    aria-controls="staticBackdrop"
  >
    <i class="fa-solid fa-sliders"></i>
    FILTERS
  </button>
  <div class="offcanvas offcanvas-start" style="width: 300px;" data-bs-backdrop="static" tabindex="-1" id="staticBackdrop" aria-labelledby="staticBackdropLabel">
    <div class="offcanvas-header">
        <h3 class="offcanvas-title tickerTimes" id="staticBackdropLabel">FILTERS</h3>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body tickerTimes p-0">
        <div class="container-fluid">

            <div class="checkbox-container">
              <h3>Price Filter</h3>
              <label for="minPrice">Min Price:</label>
<input type="number" id="minPrice" />
<label for="maxPrice">Max Price:</label>
<input type="number" id="maxPrice" />
            </div>
            

            
        
        </div>
        <button onclick="getStoredFilters()">Filter</button>
      </div>
</div>
   
</section>
<section>
  <div class="container">
    <div class="row">
      <% products.forEach(function(product) { %>
      <div class="col-md-3 col-sm-6 mb-4 equal-width">
        
        <div class="card tickerTimes">
          <img
            src="/uploads/<%= product.images[0] %>"
            class="card-img-top"
            style="height: 40vh"
            alt=""
          />
          <div
            class="card-body d-flex flex-column justify-content-between"
            style="height: 30vh"
          >
            <h6 class="card-title text-center product-name"><%= product.name %></h6>
            <div class="d-flex flex-column justify-content-center">

              <% if (product.stock === 0) { %>
              <div style="background-color: red">
                <p class="card-text text-center text-light">Out of Stock</p>
              </div>
              <% } else { %>
              <% if (product.price === product.discountPrice ){%>
                <p class="card-text mt-3">
                  Price: <%= product.price %>/-
                </p>
                <%} else{ %>
              <p class="card-text mt-3">
                Price:
                <span class="text-decoration-line-through"
                  ><%= product.price %>/-</span
                >
                <%= product.discountPrice %>
              </p>
              <%}%>
              <!-- <p class="card-text text-center">Price â‚¹<%= product.price %></p> -->
              <a
                href="/product/<%= product._id %>"
                class="btn btn-primary text-center"
                >View Details</a
              >
              <%}%>
            </div>
          </div>
        </div>
      </div>
      <% }); %>
    </div>
    <% if (products.length > 0) { %>
    <div class="d-flex justify-content-between align-items-center mt-3">
      <p>
        Showing <%= (currentPage - 1) * perPage + 1 %>- <% if(currentPage ===
        totalPages){%> <%=totalCount%> <%}else{%> <%= currentPage * perPage %>
        <%}%> results from <%= totalCount %>
      </p>
      <ul class="pagination">
        <%if(currentPage === 1){%> <%}else{%>
        <li
          class="page-item <%= currentPage === currentPage ? 'active' : '' %>"
        >
          <a class="page-link" href="?page=<%=currentPage-1%>"> prev </a>
        </li>
        <%}%>
        <li class="page-item <%= currentPage === currentPage ? '' : '' %>">
          <a class="page-link" href="?page=<%=currentPage%>"
            ><%= currentPage %></a
          >
        </li>
        <li
          class="page-item <%= currentPage === currentPage ? 'active' : '' %>"
        >
          <a class="page-link" href="?page=<%=currentPage+1%>"> next</a>
        </li>
      </ul>
    </div>
    <% } else { %>
    <p>No results found.</p>
    <% } %>
  </div>
</section>

<style>
  .product-name {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .sidebar {
    background-color: #f8f9fa;
    position: fixed;
    top: 0;
    left: 0;
    width: 16rem;
    height: 100%;
    padding: 20px;
    overflow-y: auto;
  }

  .list-group-item:hover {
    background-color: #e9ecef;
  }

  .subcategory-list,
  .subbrand-list {
    display: none;
  }
</style>

        <script>
    // Wrap your entire script in a function to prevent scope issues
    function getStoredFilters() {
        const storedMinPrice = localStorage.getItem("minPrice");
        const storedMaxPrice = localStorage.getItem("maxPrice");

        return {
            minPrice: storedMinPrice || null,
            maxPrice: storedMaxPrice || null,
        };
    }

    // Wrap your entire script in a function to prevent scope issues
    document.addEventListener('DOMContentLoaded', () => {
        async function fetchProducts(page) {
            try {
                const storedFilters = getStoredFilters();

                // Include other filter parameters if needed
                const filterParams = {
                    minPrice: storedFilters.minPrice,
                    maxPrice: storedFilters.maxPrice,
                };

                console.log('Filter parameters:', filterParams);

                const queryString = Object.keys(filterParams)
                    .map(key => key + '=' + encodeURIComponent(filterParams[key]))
                    .join('&');

                console.log('Query string:', queryString);

                const response = await fetch(`/shop?page=${page}&${queryString}`);
                if (!response.ok) {
                    throw new Error(`Failed to fetch products. Status: ${response.status}`);
                }

                const data = await response.json();
                // Implement your logic to update the UI with the fetched products
                console.log('Fetched products:', data.products);
            } catch (error) {
                console.error('Error fetching products:', error);
            }
        }

        // Example: Trigger fetch on filter form submit (adjust as needed)
        const filterForm = document.getElementById('filterForm'); // Adjust the ID accordingly
        if (filterForm) {
            filterForm.addEventListener('submit', (event) => {
                event.preventDefault();

                // Update localStorage with selected filters
                const minPriceElement = document.getElementById('minPrice');
                const maxPriceElement = document.getElementById('maxPrice');

                // Log the values of minPrice and maxPrice
                const minPrice = minPriceElement?.value;
                const maxPrice = maxPriceElement?.value;

                console.log('Selected minPrice:', minPrice);
                console.log('Selected maxPrice:', maxPrice);

                localStorage.setItem('minPrice', minPrice);
                localStorage.setItem('maxPrice', maxPrice);

                // Trigger product fetch with the updated filters
                fetchProducts(1);
            });
        }

        // Example: Trigger fetch on pagination click (adjust as needed)
        document.addEventListener('click', (event) => {
            if (event.target.classList.contains('pagination-link')) {
                const page = parseInt(event.target.dataset.page);
                fetchProducts(page);
            }
        });
    });
</script>  


<%- include('../layouts/footer') %>
