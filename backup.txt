    //   // generateAndSendOTP(email);
    //   const saltRounds = 10;
    //   const hashedPassword = await bcrypt.hash(password, saltRounds);
    //   const newUser = await UserModel.create({ username, email, password: hashedPassword });
  
    //   const otp = `${Math.floor(1000 + Math.random() * 9000)}`;
    //   const hashedOTP = await bcrypt.hash(otp, saltRounds);
    //   const newOTP = await otpModel.create({ email, otp: hashedOTP });
  
    //   const duration = '  14 minutes';
    //   const message = 'Enter This OTP to Continue';
    //   const mailOptions = {
    //     from: 'techboompage@gmail.com',
    //     to: req.body.email,
    //     subject: 'verify your email',
    //     text: otp,
    //     html: `<p>${message}</p> <p style="color: tomato; font-size: 25px; letter-spacing: 2px;"><b>${otp}</b></p><p>This Code <b>expires in ${duration} minutes(s)</b>.</p>`,
    //   };
  
    //   console.log('Generated OTP', otp);
    //   transporter.sendMail(mailOptions, (error, info) => {
    //     if (error) {
    //       console.error('Error sending email:', error);
    //       res.status(500).json({ error: 'Error sending email' });
    //     } else {
    //       console.log('Email sent successfully:', info.response);
    //       res.redirect('/otp');
    //     }
    //   });






















        
        
        
<%- include('../layouts/header')%>
<%- include('../partials/user-header')%>


<% let totalPrice = 0; %>
<!-- cart + summary -->

<section class="bg-light my-5">
  <form id="cartSubmit">
    <div class="container">
      <div class="row">
        <!-- cart -->
        <div class="col-lg-9">
          <div class="card border shadow-0">
            <div class="m-4">
              <h4 class="card-title mb-4">Your shopping cart</h4>
              <%if(cart && cart.Items && cart.Items.length > 0) { %> <%
              cart.Items.forEach(function (cartItem) { %>
              <div class="row gy-3 mb-4">
                <div class="col-lg-5">
                  <div class="me-lg-5">
                    <div class="d-flex">
                      <img
                        src="/uploads/<%= cartItem.ProductId.images[0] %>"
                        class="border rounded me-3"
                        style="width: 96px; height: 96px"
                      />
                      <div class="">
                        <a href="#" class="nav-link"
                          ><%= cartItem.ProductId.name %></a
                        >
                      </div>
                    </div>
                  </div>
                </div>
                <div class="col-lg-2 col-sm-6 col-6 d-flex flex-column">
                  <div class="input-group">
                    <div class="input-group-prepend">
                      <button
                        class="btn btn-dark decrease-quantity"
                        data-product-id="<%=cartItem.ProductId._id%>"
                        type="button"
                      >
                        -
                      </button>
                    </div>
                    <input
                    type="text"
                    class="form-control text-center quantity-input"
                    id="count_<%= cartItem.ProductId._id %>"
                    value="<%= cartItem.Quantity %>"
                    data-min-value="1"
                    data-available-quantity="<%= cartItem.ProductId.stock %>"
                    />
                    <div class="input-group-append">
                      <button
                        class="btn btn-dark increase-quantity"
                        data-product-id="<%=cartItem.ProductId._id%>"
                        type="button"
                      >
                        +
                      </button>
                    </div>
                  </div>
                  <div class="">
                    ₹
                    <text
                      class="h6 product-amount"
                      id="productAmount_<%=cartItem.ProductId._id%>"
                      data-value="<%= cartItem.ProductId.discountPrice%>"
                      ><%= cartItem.ProductId.discountPrice * cartItem.Quantity
                      %></text
                    >/-
                    <br />
                    <small class="text-muted text-nowrap">
                      ₹<%= cartItem.ProductId.discountPrice %> / per item
                    </small>
                  </div>
                </div>
                <div
                  class="col-lg col-sm-6 d-flex justify-content-sm-center justify-content-md-start justify-content-lg-center justify-content-xl-end mb-2"
                >
                <div class="float-md-end">
                  <strong
                  class="card-text text-center text-danger out-of-stock-message"
                  id="outOfStockMessage_<%= cartItem.ProductId._id %>"
                  style="display: none;"
                >
                  only <%= cartItem.ProductId.stock %> items in stock
                </strong>
                    <a
                      href="#!"
                      class="btn btn-light border px-2 icon-hover-primary"
                      ><i class="fas fa-heart fa-lg px-1 text-secondary"></i
                    ></a>
                    <a
                      href="/removefromcart/<%=cartItem.ProductId._id%>"
                      class="btn btn-light border text-danger icon-hover-danger remove-button"
                    >
                      Remove</a
                    >
                  </div>
                </div>
              </div>
              <% totalPrice += cartItem.ProductId.DiscountAmount *
              cartItem.Quantity;%> <% }); %> <% } else { %>
              <p>Your shopping cart is empty.</p>
              <a href="/homepage" class="btn btn-info">Go To Shop</a>
              <% } %>
            </div>

            <div class="border-top pt-4 mx-4 mb-4">
              <p>
                <i class="fas fa-truck text-muted fa-lg"></i> Free Delivery
                within 1-2 weeks
              </p>
              <p class="text-muted"></p>
            </div>
          </div>
        </div>
        <div class="col-lg-3">
          <div class="card mb-3 border shadow-0">
            <div class="card-body">
                <div class="form-group">
                  <label class="form-label">Have coupon?</label>
                  <div id="flashMessage" class="alert alert-danger" style="display: none;"></div>
                  <div class="input-group">
                    <input
                      type="text"
                      class="form-control border"
                      id="coupon"
                      name="couponCode"
                      placeholder="Coupon code"
                    />
                    <button type="button" data-product-id="couponClaim" class="btn btn-light border applyCoupon">Apply</button>
                  </div>
                </div>
            </div>
          </div>
          <div class="card shadow-0 border">
            <div class="card-body">
              <div class="d-flex justify-content-between">
                <p class="mb-2">Sub Total :</p>
                <div id="sub-total"></div>
              </div>
              <div class="d-flex justify-content-between">
                <p class="mb-2">Discount:</p>
                <div id="discountCell"></div>
              </div>
              <div class="d-flex justify-content-between">
                <p class="mb-2">TAX:</p>
                <p class="mb-2">--</p>
              </div>
              <hr />
              <div class="d-flex justify-content-between">
                <p class="mb-2">Total price:</p>
                    <input type="text" id="totalAmountCell" class="transparent-input" name="totalPrice" readonly>
                </p>
              </div>

              <div class="mt-3">
                <button id="makePurchase" type="button" class="btn btn-success w-100 shadow-0 mb-2">

                    Make Purchase
                </button>
                <a href="/homepage" class="btn btn-light w-100 border mt-2">
                  Back to shop
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </form>
</section>

<style>
  .icon-hover-primary:hover {
    border-color: #3b71ca !important;
    background-color: white !important;
  }

  .icon-hover-primary:hover i {
    color: #3b71ca !important;
  }
  .icon-hover-danger:hover {
    border-color: #dc4c64 !important;
    background-color: white !important;
  }

  .icon-hover-danger:hover i {
    color: #dc4c64 !important
  }
  .transparent-input {
    border: none;
    background-color: transparent;
    color: inherit;
    width: 12vw;
    font-size: inherit;
    text-align: right; /* Align the text to the right */
  }
</style>

<!-- Footer -->
<%- include('../partials/user-footer')%>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const makePurchase = document.querySelector('#makePurchase')
    const removeButtons = document.querySelectorAll(".remove-button");
    const decreaseButtons = document.querySelectorAll(".decrease-quantity");
    const increaseButtons = document.querySelectorAll(".increase-quantity");
    const applyCoupon = document.querySelectorAll(".applyCoupon")


    makePurchase.addEventListener('click',(event)=>{
      event.preventDefault();
      checkStock();
    })

    async function checkStock(){
      try {
        const response = await fetch('/checkstock',{
          method:'GET',
          headers:{
            'content-type':'application/json'
            },
        });
        if (response.ok) {
          let data = await response.json()
          console.log(data)
          if(data.success){
            console.log("inside success");
            const cartSubmitForm = $('#cartSubmit'); 
            console.log($('#cartSubmit').serialize());
            $.ajax({
              url: '/cart',
              type: 'POST',
              data: $('#cartSubmit').serialize(),
              success: function (response) {
                window.location.href = ('/checkout')
                console.log('AJAX request was successful.');
                console.log(response);
              },
              error: function (xhr, status, error) {
                console.error('AJAX request failed with status:', status);
              }
            });
          }else{
            Swal.fire({
              icon: 'error',
              title: 'Insufficient Stock',
              text: data.error,
            });
            data.itemsWithInsufficientStock.forEach(item => {
            console.log("insidee insufficientstock");
            const productId = item.productId; 
            console.log(productId);
            const outOfStockMessage = document.getElementById(`outOfStockMessage_${productId}`);
            console.log(outOfStockMessage);
            if (outOfStockMessage) {
              outOfStockMessage.style.display = "block";
              outOfStockMessage.textContent = `only ${item.stock} items in stock`;
            }
          });
        }
      }
    }
 catch (error) {
        console.error("Error checking stock :", error);
      }
    }


    removeButtons.forEach((button) => {
      button.addEventListener("click", (event) => {
        event.preventDefault(); 

        Swal.fire({
          title: "Remove Product",
          text: "Are you sure you want to remove this product from your cart?",
          icon: "warning",
          showCancelButton: true,
          confirmButtonText: "Yes, remove it",
          cancelButtonText: "Cancel",
        }).then((result) => {
          if (result.isConfirmed) {
            window.location.href = button.href;
          }
        });
      });
    });

    function updateTotalAmount() {
      let totalAmount = 0;

      const productRows = document.querySelectorAll(".row.gy-3.mb-4");
      productRows.forEach((row) => {
        const productId = row
          .querySelector(".decrease-quantity")
          .getAttribute("data-product-id");
        const quantityInput = row.querySelector(`#count_${productId}`);
        const quantity = parseInt(
          row.querySelector(`#count_${productId}`).value,
          10
        );
        const productAmount = parseFloat(
          row.querySelector(`#productAmount_${productId}`).textContent
        );

        totalAmount += productAmount;
      });


      const totalAmountCell = document.getElementById("totalAmountCell");
      const subTotal = document.getElementById("sub-total");
      totalAmountCell.value = `${totalAmount.toFixed(2)}`;
      subTotal.textContent = `${totalAmount.toFixed(2)}`;
      const hiddenTotalAmount = document.getElementById('hiddenTotalAmount');
      hiddenTotalAmount.value = totalAmount.toFixed(2);
    }

    async function updateQuantity(productId, change) {
      try {
        const response = await fetch("/updateQuantity", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ productId, change }),
        });

        if (response.ok) {
          const data = await response.json();
          console.log("Received new quantity from server:", data.newQuantity);

          const quantityInput = document.getElementById(`count_${productId}`);
          const productAmount = document.getElementById(
            `productAmount_${productId}`
          );
          const existingValue = productAmount.getAttribute("data-value");

          if (quantityInput) {
            quantityInput.value = data.newQuantity;
            productAmount.textContent = existingValue * data.newQuantity;

            // Calculate and update the total amount
            updateTotalAmount();
          }
        } else {
          console.error("Error updating quantity:", response.statusText);
        }
      } catch (error) {
        console.error("Error updating quantity:", error);
      }
    }

    async function checkCoupon(couponInput,subTotal){
      try {
        const response = await fetch('/checkCoupon',{
          method: 'POST',
          headers:{
            'Content-Type': 'application/json'
          },
          body:JSON.stringify({code: couponInput, total: subTotal})
        })
        if(response.ok){
          const data=await response.json()
          if(data.success){
            console.log("inside okkk");
            console.log(data);
            const discount = parseFloat(data.discount);
            const discountCell = document.getElementById('discountCell')
            discountCell.textContent = discount.toFixed(2)
            const newTotal = parseFloat(subTotal) - discount;
            const totalAmountCell = document.getElementById('totalAmountCell');
            totalAmountCell.value = newTotal.toFixed(2);
            Swal.fire('','Coupon Applied','success')
          }else{
          console.log("inside elseee");
          Swal.fire(data.error)
          console.log(error);
          $('#flashMessage').text(data.error).show();
        }
        }
      } catch (error) {
        console.error('Error checking coupon:', error);
      }
    }

    applyCoupon.forEach(element =>{
      element.addEventListener("click",function(e){
        const couponInput = document.querySelector('#coupon').value
        const subTotal = document.getElementById("sub-total").textContent
        checkCoupon(couponInput,subTotal);
      })
    })

    decreaseButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const productId = button.getAttribute("data-product-id");
        const quantityInput = document.getElementById(`count_${productId}`);
        const quantity = parseInt(quantityInput.value, 10);
        const availableQuantity = parseInt(quantityInput.getAttribute("data-available-quantity"), 10);
        
        if (quantity === 1) {
          return;
        }
        if (quantity <= availableQuantity) {
          const outOfStockMessage = document.querySelector(`#outOfStockMessage_${productId}`);
            outOfStockMessage.style.display = "none";
          }
        updateQuantity(productId, -1);
      });
    });

    increaseButtons.forEach((button) => {
      button.addEventListener("click", () => {
        const productId = button.getAttribute("data-product-id");
        const quantityInput = document.getElementById(`count_${productId}`);
        const quantity = parseInt(quantityInput.value, 10);
        const availableQuantity = parseInt(quantityInput.getAttribute("data-available-quantity"), 10);


        if (quantity >= availableQuantity) {
          const outOfStockMessage = document.querySelector(`#outOfStockMessage_${productId}`);
          if (outOfStockMessage) {
            outOfStockMessage.style.display = "block";
          }
          return;
        }
        updateQuantity(productId, 1);
      });
    });

    updateTotalAmount();
  });
</script>


<%- include('../layouts/footer') %>
 




































































 <%- include('../layouts/header')%> <%- include('../partials/user-header')%>
<div
  class="modal fade"
  id="addAddressModal"
  tabindex="-1"
  aria-labelledby="addAddressModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body">
        <form action="/addAddress-Checkout" method="post">
          <div class="mb-3">
            <label for="fullName" class="form-label">Full Name</label>
            <input
              type="text"
              class="form-control"
              name="Name"
              id="fullName"
              placeholder="Enter your full name"
              required
            />
          </div>
          <div class="mb-3">
            <label for="address" class="form-label">Address</label>
            <input
              type="text"
              class="form-control"
              name="Address"
              id="address"
              placeholder="Enter your address"
              required
            />
          </div>
          <div class="mb-3">
            <label for="city" class="form-label">City</label>
            <input
              type="text"
              class="form-control"
              id="city"
              name="City"
              placeholder="Enter your city"
              required
            />
          </div>
          <div class="mb-3">
            <label for="pincode" class="form-label">Pincode</label>
            <input
              type="text"
              class="form-control"
              id="pincode"
              name="Pincode"
              placeholder="Enter your pincode"
              required
            />
          </div>
          <div class="mb-3">
            <label for="state" class="form-label">State</label>
            <input
              type="text"
              class="form-control"
              id="state"
              name="State"
              placeholder="Enter your state"
              required
            />
          </div>
          <div class="mb-3">
            <label for="mobileNumber" class="form-label">Mobile Number</label>
            <input
              type="tel"
              class="form-control"
              id="mobileNumber"
              name="Mobile"
              placeholder="Enter your mobile number"
              required
            />
          </div>
          <button type="submit" class="btn btn-primary">Submit</button>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
          Close
        </button>
        <button type="button" class="btn btn-primary">Save Address</button>
      </div>
    </div>
  </div>
</div>

<div class="container custom-container main">
  <form action="/checkout" method="post">
    <div class="row">
      <!-- Left Column - Col-7 -->
      <div class="col-md-7">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">Saved Addresses</h5>

            <%user.Address.forEach(function(Address) { %>
            <!-- Address Card 1 -->
            <div class="address-card row">
              <div class="col-1">
                <input
                  type="radio"
                  name="Address"
                  value="<%=Address._id%>"
                  id="address1"
                  checked
                />
              </div>
              <div class="col-5">
                <div class="address-line">Name:</div>
                <div class="address-line">Address:</div>
                <div class="address-line">City:</div>
                <div class="address-line">Pincode:</div>
                <div class="address-line">State:</div>
                <div class="address-line">Mobile Number:</div>
              </div>
              <div class="col-6">
                <div class="address-value"><%=Address.Name%></div>
                <div class="address-value"><%=Address.AddressLane%></div>
                <div class="address-value"><%=Address.City%></div>
                <div class="address-value"><%=Address.Pincode%></div>
                <div class="address-value"><%=Address.State%></div>
                <div class="address-value"><%=Address.Mobile%></div>
              </div>
            </div>
            <%})%>
            <button
              class="btn btn-info"
              data-bs-toggle="modal"
              data-bs-target="#addAddressModal"
            >
              <i class="fas fa-plus-circle"></i> Add Address
            </button>
          </div>
        </div>
      </div>

      <!-- Right Column - Col-5 -->
      <div class="col-md-5">
        <div class="card">
          <div class="card-body">
            <h5 class="card-title">Payment Methods</h5>

            <div class="form-check">
              <input
                class="form-check-input"
                type="radio"
                name="paymentMethod"
                id="cod"
                value="cod"
                checked
              />
              <label class="form-check-label" for="cod">
                Cash on Delivery (COD)
              </label>
            </div>
            <div class="form-check">
              <input
                class="form-check-input"
                type="radio"
                name="paymentMethod"
                id="online"
                value="online"
              />
              <label class="form-check-label" for="online">
                Online Payment
              </label>
            </div>
            <div class="justify-content-center">
              <button class="btn btn-success mt-4" type="submit">
                Confirm Order
              </button>
              <button class="btn btn-secondary mt-4">Back to Shop</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </form>
</div>

<style>
  .address-card {
    border: 1px solid #dee2e6;
    border-radius: 10px;
    padding: 10px;
    margin-bottom: 20px;
  }

  .address-line {
    font-weight: bold;
    margin-bottom: 5px;
  }

  .address-value {
    margin-bottom: 10px;
  }

  .card {
    border-radius: 15px;
    border: 1px solid #dee2e6;
    margin-bottom: 20px;
  }
  body {
    background-color: rgb(36, 47, 69);
  }
  .card-title {
    color: #007bff;
  }
  .main {
    margin-top: 10vh;
  }
  .address-card {
    border: 1px solid #dee2e6;
    border-radius: 10px;
    padding: 10px;
    margin-bottom: 20px;
  }

  .address-line {
    font-weight: bold;
    margin-bottom: 5px;
  }

  .address-value {
    margin-bottom: 10px;
  }

  .card {
    border-radius: 15px;
    border: 1px solid #dee2e6;
    margin-bottom: 20px;
  }

  .card-title {
    color: #007bff;
  }

  .confirm-order-btn {
    background-color: #28a745;
    color: #fff;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    margin-right: 10px;
    cursor: pointer;
  }
  .address-card {
    border: 1px solid #dee2e6;
    border-radius: 10px;
    padding: 10px;
    margin-bottom: 20px;
  }

  .address-line {
    font-weight: bold;
    margin-bottom: 5px;
  }

  .address-value {
    margin-bottom: 10px;
  }

  .card {
    border-radius: 15px;
    border: 1px solid #dee2e6;
    margin-bottom: 20px;
  }

  .card-title {
    color: #007bff;
  }

  .back-to-shop-btn {
    background-color: #58718c;
    color: #fff;
    border: none;
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
  }
</style>

<%- include('../layouts/footer') %>
